version: 2.1

parameters:
  cache-version:
    type: string
    default: "v15" # taylor added this to "force" all caches to be cleared

orbs:
  codecov: codecov/codecov@1.0.5

executors:
  platform-executor:
    docker:
      - image: circleci/elixir:1.11.3-node-browsers
        environment:
          MIX_ENV: test
      - image: circleci/postgres:12.0-alpine
    working_directory: ~/app # directory where steps will run

commands:
  update_node_npm:
    steps:
      - run:
          name: "Update Node.js and npm"
          command: |
            curl -sSL "https://nodejs.org/dist/v14.17.6/node-v14.17.6-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v14.17.6-linux-x64/bin/node
            curl https://www.npmjs.com/install.sh | sudo bash
      - run:
          name: Check current version of node
          command: node -v
  install_lp:
    steps:
      - run:
          name: "Create priv/language_packs directory if does not exist"
          command: |
            [ -d priv/language_packs ] || mkdir -p priv/language_packs
            cd ./priv/language_packs
            if [ ! "$(ls -A ./)" ]; then
              ~/app/scripts/install_test_lp.sh
            fi
            ls -a
jobs:
  build:
    parallelism: 1
    executor: platform-executor
    steps:
      - update_node_npm
      - checkout
      - run: cp .env.test.example .env.test
      # - run:
      #     name: Start chromedriver
      #     command: chromedriver
      #     background: true
      - run: mix local.hex --force
      - run: mix local.rebar --force

      - restore_cache:
          keys:
            - dependency-cache-<< pipeline.parameters.cache-version >>-{{ .Branch }}-{{ checksum "mix.lock" }}
            - dependency-cache-<< pipeline.parameters.cache-version >>-{{ .Branch }}
            - dependency-cache-<< pipeline.parameters.cache-version >>
      - restore_cache:
          keys:
            - build-cache-<< pipeline.parameters.cache-version >>-{{ .Branch }}
            - build-cache-<< pipeline.parameters.cache-version >>

      - run: mix do deps.get --only test, deps.compile, compile

      - save_cache:
          key: dependency-cache-<< pipeline.parameters.cache-version >>-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths:
            - deps
      - save_cache:
          key: dependency-cache-<< pipeline.parameters.cache-version >>-{{ .Branch }}
          paths:
            - deps
      - save_cache:
          key: dependency-cache-<< pipeline.parameters.cache-version >>
          paths:
            - deps

      # Build Cache
      - save_cache:
          key: build-cache-<< pipeline.parameters.cache-version >>-{{ .Branch }}
          paths:
            - _build
      - save_cache:
          key: build-cache-<< pipeline.parameters.cache-version >>
          paths:
            - _build

      # YARN -------------------------------------------------------------------
      - restore_cache:
          keys:
            - npm-cache-<< pipeline.parameters.cache-version >>-{{ .Branch }}-{{ checksum "./assets/yarn.lock" }}
            - npm-cache-<< pipeline.parameters.cache-version >>-{{ .Branch }}
            - npm-cache-<< pipeline.parameters.cache-version >>

      - run: cd assets && yarn install

      - save_cache:
          key: npm-cache-<< pipeline.parameters.cache-version >>-{{ .Branch }}-{{ checksum "./assets/yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: npm-cache-<< pipeline.parameters.cache-version >>-{{ .Branch }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: npm-cache-<< pipeline.parameters.cache-version >>
          paths:
            - ~/.cache/yarn
      # ------------------------------------------------------------------------

      # WEBPACK ----------------------------------------------------------------
      #  We are not caching webpack build artifacts yet.
      #  TODO: See inspiration here https://github.com/AlexRiedler/my_project)
      #  and this issue https://github.com/phoenixframework/phoenix/issues/2996

      - run: cd assets && pwd && ./node_modules/.bin/webpack --mode production

      # DB Connect
      # ------------------------------------------------------------------------
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run: mix ecto.create
      - run: mix ecto.migrate

        # Language Packs Cache
        # ------------------------------------------------------------------------
      - restore_cache:
          keys:
            - language-packs-cache-<< pipeline.parameters.cache-version >>

      - install_lp

      - save_cache:
          key: language-packs-<< pipeline.parameters.cache-version >>
          paths:
            - priv/language_packs

      #  --------------------------------------------------------------------------

      # Test(Move these to their own jobs)
      # - run: env $(cat .env.test | xargs) mix coveralls.json -o ./test/artifacts/reports

      # - run: ls ./test/artifacts/reports

      # - run: cd assets && yarn test

      # - codecov/upload:
      #     file: test/artifacts/reports/excoveralls.json

      # - store_test_results:
      #     path: test/artifacts/reports/

      # - store_artifacts:
      #     path: test/artifacts/screenshots/
